version: '3.8'

services:
  timelinebuilder:
    image: timeline_frontend
    build:
      context: .
      dockerfile: ./Dockerfile_frontend
    container_name: timeline_frontend
    working_dir: /timelinebuilder
    command: /bin/sh -c "npm install && npm start"
    env_file:
      - .env
    environment:
      - PORT=3000
      - HOME=/timelinebuilder
      - VIRTUAL_HOST=front.timeline.com
    volumes:
      - ./front:/timelinebuilder
    networks:
      timeline:
        ipv4_address: 172.20.0.3
    ports:
      - "80:3000"
      - "3000:3000"
    depends_on:
      - php
      - mysql
      - api
    links:
      - php
      - mysql
      - api

  mysql:
    image: mysql:8.0
    container_name: timeline_mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "3306:3306"
    networks:
      timeline:
        ipv4_address: 172.20.0.4
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=mysql.timeline.com
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      interval: 10s
      retries: 10

  phpmyadmin:
    image: phpmyadmin
    container_name: timeline_pma
    restart: always
    ports:
      - '127.0.0.1:8080:80'
    networks:
      timeline:
        ipv4_address: 172.20.0.5
    environment:
      - PMA_ARBITRARY=1
      - VIRTUAL_HOST=pma.timeline.com
    links:
      - mysql

  api:
    image: nginx:latest
    container_name: timeline_nginx
    restart: always
    ports:
      # - "80:80"
      - "3030:80"
    networks:
      timeline:
        ipv4_address: 172.20.0.6
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=api.timeline.com
    volumes:
      - ./api:/www
      - ./default.conf:/etc/nginx/conf.d/default.conf
    links:
      - php
    depends_on:
      - php
    extra_hosts:
      - "localhost:172.20.0.6"

  php:
    image: php:8.2-fpm
    container_name: timeline_php-fpm
    restart: on-failure
    ports:
      - "9000:9000"
    networks:
      timeline:
        ipv4_address: 172.20.0.7
    volumes:
      - ./api:/www
    depends_on:
      - mysql
    links:
      - mysql

  # artisan:
  #     container_name: php-artisan
  #     build: .
  #     volumes:
  #         - ./api:/www
  #     command: bash -c "chmod 777 -R storage; php artisan key:generate; php artisan migrate;"
  #     restart: on-failure
  #     depends_on:
  #         - php
  #         - mysql
  #     links:
  #         - php
  #         - mysql

  phpqa:
    image: jakzal/phpqa:php8.2
    container_name: timeline_ci
    volumes:
      - ./api:/www
    working_dir: /www
    command: bash -c "composer install"

volumes:
  mysql_data:

networks:
  timeline:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24