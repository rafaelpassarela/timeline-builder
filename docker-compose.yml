version: '3.4'

services:
  timelinebuilder:
    image: timelinebuilder
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: timelinebuilder
    hostname: tlb
    working_dir: /timelinebuilder
    command: /bin/sh -c "npm install && npm start"
    environment:
      - NPM_CONFIG_LOGLEVEL=warn
      - PORT=3000
      - HOME=/app/homedir
    volumes:
      - ./:/timelinebuilder
    ports:
    #  - 80
      - 3000
    depends_on:
      - artisan
    links:
      - artisan

  mysql:
    container_name: db-mysql
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: api
      MYSQL_USER: api
      MYSQL_PASSWORD: mudar123
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 20s
        interval: 10s
        retries: 10

  phpmyadmin:
    container_name: php-myadmin
    image: phpmyadmin
    restart: always
    ports:
        - '127.0.0.1:8080:80'
    environment:
        - PMA_ARBITRARY=1
    links:
        - mysql

  web:
      container_name: nginx
      image: nginx:latest
      restart: always
      ports:
          - "127.0.0.1:80:80"
      volumes:
          - ./:/www
          - ./default.conf:/etc/nginx/conf.d/default.conf
      links:
          - php
      depends_on:
          - php

  php:
      container_name: php-fpm
      build: .
      volumes:
          - ./:/www
      restart: on-failure
      depends_on:
          - mysql
      links:
          - mysql

  artisan:
      container_name: php-artisan
      build: .
      volumes:
          - ./:/www
      command: bash -c "chmod 777 -R storage; php artisan key:generate; php artisan migrate;"
      restart: on-failure
      depends_on:
          - php
          - mysql
      links:
          - php
          - mysql

  phpqa:
      container_name: composer-install
      image: jakzal/phpqa:php7.4
      volumes:
          - ./:/www
      working_dir: /www
      command: bash -c "composer install"