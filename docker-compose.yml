version: '3.4'

services:
  timelinebuilder:
    image: timelinebuilder
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: timelinebuilder
    hostname: tlb
    working_dir: /timelinebuilder
    command: /bin/sh -c "npm install && npm start"
    environment:
      - NPM_CONFIG_LOGLEVEL=warn
      - PORT=3001
      - HOME=/timelinebuilder
    volumes:
      - ./front:/timelinebuilder
    ports:
      - 3001
    depends_on:
      - php
      - mysql
      - web
    links:
      - php
      - mysql
      - web

  mysql:
    image: mysql:5.7
    container_name: db-mysql
    hostname: tlb
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: api
      MYSQL_USER: api
      MYSQL_PASSWORD: mudar123
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      interval: 10s
      retries: 10

  phpmyadmin:
    image: phpmyadmin
    container_name: php-myadmin
    hostname: tlb
    restart: always
    ports:
      - '127.0.0.1:8080:80'
    environment:
      - PMA_ARBITRARY=1
    links:
      - mysql

  web:
    image: nginx:latest
    container_name: nginx
    hostname: tlb
    restart: always
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - ./api:/www
      - ./default.conf:/etc/nginx/conf.d/default.conf
    links:
      - php
    depends_on:
      - php

  php:
    build: ./api/.
    container_name: php-fpm
    hostname: tlb
    volumes:
      - ./api:/www
    restart: on-failure
    depends_on:
      - mysql
    links:
      - mysql

  # artisan:
  #     container_name: php-artisan
  #     build: .
  #     volumes:
  #         - ./api:/www
  #     command: bash -c "chmod 777 -R storage; php artisan key:generate; php artisan migrate;"
  #     restart: on-failure
  #     depends_on:
  #         - php
  #         - mysql
  #     links:
  #         - php
  #         - mysql

  phpqa:
    image: jakzal/phpqa:php8.2
    container_name: composer-install
    hostname: tlb
    volumes:
      - ./api:/www
    working_dir: /www
    command: bash -c "composer install"
