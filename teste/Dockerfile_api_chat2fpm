# Define a imagem base
FROM php:8.2-fpm-alpine

# Instala as dependências necessárias
RUN apk add --no-cache \
    curl \
    libzip-dev \
    oniguruma-dev \
    mysql-client \
    libpng-dev \
    libjpeg-turbo-dev \
    libwebp-dev \
    libxpm-dev \
    freetype-dev \
    zip \
    unzip

# Instala as extensões PHP necessárias
RUN docker-php-ext-install \
    pdo_mysql \
    bcmath \
    mbstring \
    zip \
    exif \
    pcntl \
    gd \
    opcache

# Habilita o módulo de reescrita do Apache
RUN docker-php-ext-enable \
    opcache

# Instala o composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Define o diretório de trabalho
WORKDIR /var/www/html

# Copia todo o código do backend para o diretório de trabalho
COPY ./api .

# Instala as dependências do composer
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

# Define as variáveis de ambiente necessárias
ENV DB_CONNECTION=mysql
ENV DB_HOST=mysql
ENV DB_PORT=3306
ENV DB_DATABASE=timelinebuilder
ENV DB_USERNAME=root
ENV DB_PASSWORD=password
ENV APP_KEY=base64:bKL1dJjd9XkbzwKpKYU0v6iBpW8GKM0CBngyzxaxBvQ=

# Gera a chave de aplicativo
RUN php artisan key:generate

# Expõe a porta 9000
EXPOSE 9000

# Inicia o servidor do PHP-FPM
CMD ["php-fpm"]

# rodar na pata ./api -> docker build -t api .